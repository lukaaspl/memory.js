{"version":3,"sources":["js/Statistics.js","js/Sound.js","js/Memory.js","js/Interface.js","js/main.js","C:/Users/Lukas/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["Statistics","pairsTotal","nodes","document","querySelector","foundPairs","missedPairs","gameTime","textContent","timeInterval","setInterval","clearInterval","Sound","defaultVolume","muted","sounds","pop","Audio","negative","positive","victory","volume","key","play","Memory","containerNode","difficultyLevel","gameActive","cardPicked","firstCard","secondCard","pairs","hexCode","previewTime","statistics","cardBackgroundImageTag","cardBackground","sound","setVolume","pauseButtonNode","i","card","createElement","className","innerHTML","appendChild","state","startTime","pauseTime","_hexadecimals","hexadecimals","split","colorsArray","performance","now","length","hexColor","j","randomIndex","Math","floor","random","indexOf","push","endTime","creationTime","pairedColorsArray","concat","pairedColors","colors","time","cardsNodes","querySelectorAll","cards","createColorsArray","console","info","toFixed","forEach","setAttribute","addEventListener","evt","pickCard","target","splice","classList","contains","removeAttribute","gameOn","cardBackgroundColor","getAttribute","invertCard","addPair","unsetPickedCards","coverCardsTimeout","setTimeout","coverInvertedCards","bind","negativeSoundTimeout","addMissedPair","clearTimeout","add","style","backgroundColor","remove","handOutCardTime","timeBeforePreview","index","preview","invertedCards","invertedCard","invertedCardBackgroundColor","addFoundPair","finishScene","call","Interface","memory","drawStars","stars","starsMax","starFilled","starContour","contourStarsToDraw","outcome","secondsPerPair","efficiency","starsForTime","starsForEfficiency","finishSceneMarkup","openModal","playAgainButton","getElementById","breakGame","introduction","closeModal","resetStatistics","removeChild","board","menuToggleButton","menuBar","logo","menuButtons","intro","difficultyLevelForm","difficultyDescription","modal","footer","menuToggle","menuButton","captureMenuButton","isSoundMuted","loadingScene","loadingLogo","window","pickedLevel","renderCards","fillCards","handOutCards","mute","toggle","action","dataset","innerWidth","unmute","firstTime","newGameButton","disabled","difficultyForm","id","activeDesc","descToLoad","preventDefault","startGame","content","type","closeModalButton","userInterface","init","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","stackTrace","innerText","getParents","modules","parents","k","d","dep","Array","isArray","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["// class for managing statistics\r\nclass Statistics {\r\n    constructor(pairsTotal) {\r\n        // HTML references to statistic fields\r\n        this.nodes = {\r\n            pairsTotal: document.querySelector('.pairsTotal'),\r\n            foundPairs: document.querySelector('.pairsFound'),\r\n            missedPairs: document.querySelector('.pairsMissed'),\r\n            gameTime: document.querySelector('.gameTime'),\r\n        };\r\n\r\n        // set how many pairs are on the board\r\n        this.nodes.pairsTotal.textContent = pairsTotal;\r\n\r\n        // statistics\r\n        this.foundPairs = 0;\r\n        this.missedPairs = 0;\r\n        this.gameTime = 0;\r\n    }\r\n\r\n    // start/continue counting time\r\n    startTime() {\r\n        this.timeInterval = setInterval(() => {\r\n            ++this.gameTime;\r\n            this.nodes.gameTime.textContent = this.gameTime;\r\n        }, 1000);\r\n    }\r\n\r\n    // pause counting time\r\n    pauseTime() {\r\n        clearInterval(this.timeInterval);\r\n    }\r\n\r\n    // add missed pair\r\n    addMissedPair() {\r\n        ++this.missedPairs;\r\n        this.nodes.missedPairs.textContent = this.missedPairs;\r\n    }\r\n\r\n    // add found pair\r\n    addFoundPair() {\r\n        ++this.foundPairs;\r\n        this.nodes.foundPairs.textContent = this.foundPairs;\r\n    }\r\n\r\n    // reset statistics in case of starting new game\r\n    resetStatistics() {\r\n        clearInterval(this.timeInterval);\r\n\r\n        this.nodes.pairsTotal.textContent = 0;\r\n        this.nodes.gameTime.textContent = 0;\r\n        this.nodes.missedPairs.textContent = 0;\r\n        this.nodes.foundPairs.textContent = 0;\r\n    }\r\n}\r\n\r\nexport default Statistics;","import pop from '../assets/pop.wav';\r\nimport negative from '../assets/negative.wav';\r\nimport positive from '../assets/positive.wav';\r\nimport victory from '../assets/victory.mp3';\r\n\r\n// class for managing sound\r\nclass Sound {\r\n    constructor() {\r\n        // set default volume in case of invalid volume parameter\r\n        this.defaultVolume = 0.4;\r\n\r\n        // keep sound unmuted as default\r\n        this.muted = false;\r\n\r\n        // sound sources\r\n        this.sounds = {\r\n            pop: new Audio(pop),\r\n            negative: new Audio(negative),\r\n            positive: new Audio(positive),\r\n            victory: new Audio(victory),\r\n        }\r\n    }\r\n\r\n    // set volume method\r\n    setVolume(volume) {\r\n        if (volume < 0 || volume > 1)\r\n            return false;\r\n\r\n        this.defaultVolume = volume;\r\n\r\n        for (let key in this.sounds)\r\n            this.sounds[key].volume = volume;\r\n    }\r\n\r\n    // mute / unmute methods\r\n    mute() {\r\n        this.muted = true;\r\n\r\n        for (let key in this.sounds)\r\n            this.sounds[key].muted = true;\r\n    }\r\n\r\n    unmute() {\r\n        this.muted = false;\r\n\r\n        for (let key in this.sounds)\r\n            this.sounds[key].muted = false;\r\n    }\r\n\r\n    // play sound methods\r\n    pop() {\r\n        this.sounds.pop.play();\r\n    }\r\n\r\n    negative() {\r\n        this.sounds.negative.play();\r\n    }\r\n\r\n    positive() {\r\n        this.sounds.positive.play();\r\n    }\r\n\r\n    victory() {\r\n        this.sounds.victory.play();\r\n    }\r\n}\r\n\r\nexport default Sound;","/**\r\n * @license\r\n * Memory Puzzles game written in JavaScript\r\n * Copyright Łukasz Roman <https://github.com/lukaaspl>\r\n * Relased under MIT license\r\n */\r\n\r\nimport Statistics from './Statistics';\r\nimport Sound from './Sound';\r\nimport Interface from './Interface';\r\nimport cardBackground from '../assets/card-bg.png';\r\n\r\nclass Memory {\r\n    constructor(containerNode, difficultyLevel) {\r\n        this.containerNode = containerNode;\r\n\r\n        // game flags \r\n        this.gameActive = false;\r\n        this.cardPicked = 'none';\r\n        this.firstCard = '';\r\n        this.secondCard = '';\r\n\r\n        // set configuration depending on difficulty level:\r\n        // pairs number, hex codes yes or not, preview time\r\n        this.difficultyLevel = difficultyLevel;\r\n\r\n        switch (this.difficultyLevel) {\r\n            case 'easy':\r\n                this.pairs = 12;\r\n                this.hexCode = true;\r\n                this.previewTime = 4000;\r\n                break;\r\n            case 'normal':\r\n                this.pairs = 16;\r\n                this.hexCode = true;\r\n                this.previewTime = 3000;\r\n                break;\r\n            case 'hard':\r\n                this.pairs = 20;\r\n                this.hexCode = false;\r\n                this.previewTime = 2000;\r\n                break;\r\n            default:\r\n                this.pairs = 16;\r\n                this.hexCode = true;\r\n                this.previewTime = 3000;\r\n        }\r\n\r\n        // array with pairs which were found\r\n        this.foundPairs = [];\r\n\r\n        // create statstics object to be able to update them\r\n        this.statistics = new Statistics(this.pairs);\r\n\r\n        // card background img tag\r\n        this.cardBackgroundImageTag = `<img src=\"${cardBackground}\" alt=\"\">`;\r\n\r\n        // create music objects to have access to game sounds\r\n        this.sound = new Sound();\r\n        this.sound.setVolume(0.4);\r\n\r\n        this.pauseButtonNode = document.querySelector('button[data-action=\"pause\"]');\r\n    }\r\n\r\n    // render cards divs elements\r\n    renderCards() {\r\n        for (let i = 0; i < this.pairs * 2; i++) {\r\n            const card = document.createElement('div');\r\n            card.className = 'card';\r\n            card.innerHTML = this.cardBackgroundImageTag;\r\n\r\n            this.containerNode.appendChild(card);\r\n        }\r\n    }\r\n\r\n    // switch game on/off\r\n    gameOn(state) {\r\n        if (state) {\r\n            this.gameActive = true;\r\n            this.statistics.startTime();\r\n        } else {\r\n            this.gameActive = false;\r\n            this.statistics.pauseTime();\r\n        }\r\n    }\r\n\r\n    // generate color for every card\r\n    createColorsArray() {\r\n        const _hexadecimals = '0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f';\r\n        const hexadecimals = _hexadecimals.split(',');\r\n        const colorsArray = [];\r\n\r\n        // mesaure time needed to create an array\r\n        const startTime = performance.now();\r\n\r\n        while (colorsArray.length < this.pairs) {\r\n            let hexColor = '';\r\n\r\n            for (let j = 0; j < 6; j++) {\r\n                const randomIndex = Math.floor(Math.random() * hexadecimals.length);\r\n                hexColor += hexadecimals[randomIndex];\r\n            }\r\n\r\n            hexColor = `#${hexColor}`;\r\n\r\n            // if that color does not exist yet, push it to the array\r\n            // else iterate again\r\n            if (colorsArray.indexOf(hexColor) === -1)\r\n                colorsArray.push(hexColor);\r\n        }\r\n\r\n        const endTime = performance.now();\r\n        const creationTime = endTime - startTime;\r\n\r\n        // double array to make every color have a pair\r\n        const pairedColorsArray = colorsArray.concat(colorsArray);\r\n\r\n        return {\r\n            pairedColors: pairedColorsArray,\r\n            colors: colorsArray,\r\n            time: creationTime,\r\n        };\r\n    }\r\n\r\n    // fill cards with generated colors\r\n    fillCards() {\r\n        this.cardsNodes = document.querySelectorAll('.card');\r\n\r\n        const cards = this.cardsNodes;\r\n        const colors = this.createColorsArray();\r\n        const pairedColors = colors.pairedColors;\r\n        const creationTime = colors.time;\r\n\r\n        console.info(`colors generated in ${creationTime.toFixed(2)} seconds`);\r\n\r\n        cards.forEach(card => {\r\n            // randomly set colors to cards\r\n            const randomIndex = Math.floor(Math.random() * pairedColors.length);\r\n\r\n            card.setAttribute('data-card-color', pairedColors[randomIndex]);\r\n            card.addEventListener('click', evt => this.pickCard(evt.target));\r\n\r\n            // remove color from array after each iteration\r\n            pairedColors.splice(randomIndex, 1);\r\n        });\r\n    }\r\n\r\n    // click on card\r\n    pickCard(card) {\r\n        // if card was already inverted \r\n        // by picking first/second card or clicking on paired cards\r\n        // then break function\r\n        if (card.classList.contains('inverted'))\r\n            return false;\r\n\r\n        // switch game state to on if it's first click\r\n        if (!this.gameActive) {\r\n            this.pauseButtonNode.removeAttribute('disabled');\r\n            this.gameOn(true);\r\n        }\r\n\r\n        const cardBackgroundColor = card.getAttribute('data-card-color');\r\n\r\n        // adjust behavior depending on the type of card selection\r\n        switch (this.cardPicked) {\r\n            case 'none':\r\n                // picked first card\r\n                this.cardPicked = 'first';\r\n                this.firstCard = cardBackgroundColor;\r\n                this.invertCard(card);\r\n                this.sound.pop();\r\n                break;\r\n\r\n            case 'first':\r\n                // picked second card\r\n                this.cardPicked = 'second';\r\n                this.secondCard = cardBackgroundColor;\r\n                this.invertCard(card);\r\n\r\n                // check if both cards make a pair\r\n                if (this.firstCard === this.secondCard) {\r\n                    // found a pair\r\n                    this.addPair();\r\n                    this.unsetPickedCards();\r\n                    this.sound.positive();\r\n                } else {\r\n                    // cards do not fit\r\n                    this.coverCardsTimeout = (\r\n                        setTimeout(this.coverInvertedCards.bind(this), 1000)\r\n                    );\r\n\r\n                    this.negativeSoundTimeout = (\r\n                        setTimeout(() => this.sound.negative(), 1000)\r\n                    );\r\n\r\n                    this.statistics.addMissedPair();\r\n                    this.sound.pop();\r\n                }\r\n                break;\r\n\r\n            case 'second':\r\n                // pick card before timeout function fires\r\n                // so invert clicked card and cover at once inverted ones before\r\n                this.coverInvertedCards();\r\n                clearTimeout(this.coverCardsTimeout);\r\n                clearTimeout(this.negativeSoundTimeout);\r\n\r\n                // so it's treated as first card picking\r\n                this.cardPicked = 'first';\r\n                this.firstCard = cardBackgroundColor;\r\n                this.invertCard(card);\r\n                this.sound.pop();\r\n                break;\r\n\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    // invert card and name it by using her hex color\r\n    invertCard(card) {\r\n        const cardBackgroundColor = card.getAttribute('data-card-color');\r\n\r\n        card.classList.add('inverted');\r\n        card.style.backgroundColor = cardBackgroundColor;\r\n\r\n        if (this.hexCode)\r\n            card.innerHTML = `<h3 class=\"color-desc\">${cardBackgroundColor}</h3>`;\r\n    }\r\n\r\n    // preview cards before game is on\r\n    preview() {\r\n        // do not preview as it's set in difficulty level config \r\n        if (!this.previewTime)\r\n            return false;\r\n\r\n        this.cardsNodes.forEach(card => this.invertCard(card));\r\n        setTimeout(() => {\r\n            this.coverInvertedCards();\r\n            this.containerNode.classList.remove('overlayed');\r\n        }, this.previewTime);\r\n    }\r\n\r\n    // handing out cards animation\r\n    handOutCards() {\r\n        const cards = this.cardsNodes;\r\n\r\n        // set single card animation time [ms]\r\n        const handOutCardTime = 30;\r\n\r\n        // set time after which preview is on after handing out cards animation \r\n        const timeBeforePreview = (cards.length * handOutCardTime) + 800;\r\n\r\n        // if preview is enabled, make cards overlayed that they can not be clicked\r\n        if (this.previewTime)\r\n            this.containerNode.classList.add('overlayed');\r\n\r\n        // hide cards\r\n        cards.forEach((card, index) => {\r\n            card.classList.add('hidden');\r\n\r\n            // hand out cards\r\n            setTimeout(() => (\r\n                card.classList.remove('hidden')\r\n            ), handOutCardTime * index);\r\n        });\r\n\r\n        // turn on preview\r\n        setTimeout(() => this.preview(), timeBeforePreview);\r\n    }\r\n\r\n    // cover inverted cards\r\n    coverInvertedCards() {\r\n        const invertedCards = document.querySelectorAll('.card.inverted');\r\n\r\n        // but only unpaired ones\r\n        invertedCards.forEach(invertedCard => {\r\n            const invertedCardBackgroundColor = invertedCard.getAttribute('data-card-color');\r\n\r\n            if (this.foundPairs.indexOf(invertedCardBackgroundColor) === -1) {\r\n                invertedCard.classList.remove('inverted');\r\n                invertedCard.style.backgroundColor = '';\r\n                invertedCard.innerHTML = this.cardBackgroundImageTag;\r\n            }\r\n        });\r\n\r\n        // reset card flags\r\n        this.unsetPickedCards();\r\n    }\r\n\r\n    // add pair to game collection\r\n    addPair() {\r\n        this.foundPairs.push(this.firstCard);\r\n        --this.pairs;\r\n\r\n        this.statistics.addFoundPair();\r\n\r\n        // check if there still are pairs to uncover\r\n        if (this.pairs === 0) {\r\n            this.gameOn(false);\r\n            this.pauseButtonNode.setAttribute('disabled', '');\r\n            this.finishScene.call(new Interface(), this.statistics, this);\r\n        }\r\n    }\r\n\r\n    // reset card flags\r\n    unsetPickedCards() {\r\n        this.firstCard = '';\r\n        this.secondCard = '';\r\n        this.cardPicked = 'none';\r\n    }\r\n\r\n    // function called with context of interface object so \"this\" means interface instance, not memory\r\n    finishScene(statistics, memory) {\r\n        const drawStars = (stars) => {\r\n            const starsMax = 5;\r\n            const starFilled = '<i class=\"fas fa-star\"></i>';\r\n            const starContour = '<i class=\"far fa-star\"></i>';\r\n            const contourStarsToDraw = starsMax - stars;\r\n            let outcome = '';\r\n\r\n            for (let i = 0; i < stars; i++)\r\n                outcome += starFilled;\r\n\r\n            for (let i = 0; i < contourStarsToDraw; i++)\r\n                outcome += starContour;\r\n\r\n            return outcome;\r\n        }\r\n\r\n        const foundPairs = statistics.foundPairs;\r\n        const missedPairs = statistics.missedPairs;\r\n        const gameTime = statistics.gameTime;\r\n        const secondsPerPair = (gameTime / foundPairs).toFixed(2);\r\n        const efficiency = Math.floor(((foundPairs * 100) / (foundPairs + missedPairs)));\r\n\r\n        let starsForTime = 1;\r\n        let starsForEfficiency = 5;\r\n\r\n        if (secondsPerPair < 2)\r\n            starsForTime = 5;\r\n        else if (secondsPerPair <= 4)\r\n            starsForTime = 4;\r\n        else if (secondsPerPair <= 6)\r\n            starsForTime = 3;\r\n        else if (secondsPerPair <= 8)\r\n            starsForTime = 2;\r\n\r\n        if (efficiency < 20)\r\n            starsForEfficiency = 1;\r\n        else if (efficiency <= 40)\r\n            starsForEfficiency = 2;\r\n        else if (efficiency <= 60)\r\n            starsForEfficiency = 3;\r\n        else if (efficiency <= 80)\r\n            starsForEfficiency = 4;\r\n\r\n        const finishSceneMarkup = (\r\n            `<div class=\"finish-scene\">\r\n            <h2><i class=\"fas fa-trophy\"></i> Congratulations!</h2>\r\n    \r\n            <p>You have successfully completed the game with the following result:</p>\r\n    \r\n            <div class=\"game-result\">\r\n                <p>\r\n                    You discovered <span>${foundPairs} pairs</span> in <span>${gameTime} seconds</span>\r\n                    and you were wrong <span>${missedPairs} times:</span>\r\n                </p>\r\n                <div class=\"stars\">\r\n                    <div class=\"star-section\">\r\n                        <span>It gives <strong>1 pair per ${secondsPerPair} seconds</strong></span>\r\n                        <span>${drawStars(starsForTime)}</span>\r\n                    </div>\r\n                    <div class=\"star-section\">\r\n                        <span>It gives <strong>${efficiency}% efficiency</strong></span>\r\n                        <span>${drawStars(starsForEfficiency)}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    \r\n            <button id=\"play-again-btn\">Play again</button>\r\n    \r\n            </div>`\r\n        );\r\n\r\n        setTimeout(() => {\r\n            this.openModal(finishSceneMarkup);\r\n            memory.sound.victory();\r\n\r\n            const playAgainButton = document.getElementById('play-again-btn');\r\n            playAgainButton.addEventListener('click', () => {\r\n                memory.breakGame();\r\n                this.introduction(false);\r\n                this.closeModal();\r\n            });\r\n        }, 500);\r\n    }\r\n\r\n    breakGame() {\r\n        if (!this.gameActive) {\r\n            this.containerNode.classList.remove('paused');\r\n            this.pauseButtonNode.innerHTML = '<i class=\"fas fa-pause\"></i> Pause';\r\n        }\r\n\r\n        this.cardsNodes.forEach(card => {\r\n            card.classList.add('hidden');\r\n        });\r\n\r\n        this.statistics.resetStatistics();\r\n\r\n        this.pauseButtonNode.setAttribute('disabled', '');\r\n\r\n        if (this.containerNode.classList.contains('overlayed'))\r\n            this.containerNode.classList.remove('overlayed');\r\n\r\n        setTimeout(() => {\r\n            this.cardsNodes.forEach(card => {\r\n                this.containerNode.removeChild(card);\r\n            });\r\n        }, 200);\r\n    }\r\n}\r\n\r\nexport default Memory;\r\n","import Memory from './Memory';\r\n\r\n// class for managing interface\r\nclass Interface {\r\n    constructor() {\r\n        // HTML references to interface objects\r\n        this.nodes = {\r\n            board: document.querySelector('.board'),\r\n            menuToggleButton: document.querySelector('.menu-toggler'),\r\n            menuBar: document.querySelector('.menu'),\r\n            logo: document.querySelector('header > .logo'),\r\n            menuButtons: document.querySelectorAll('.nav-menu button'),\r\n            intro: document.querySelector('.intro'),\r\n            difficultyLevelForm: document.querySelector('.difficulty-level'),\r\n            difficultyDescription: document.querySelector('.level-description-box'),\r\n            modal: document.querySelector('.modal'),\r\n            footer: document.querySelector('footer'),\r\n        }\r\n    }\r\n\r\n    // init interface buttons listeners\r\n    init() {\r\n        this.nodes.menuToggleButton\r\n            .addEventListener('click', this.menuToggle.bind(this));\r\n\r\n        this.nodes.menuButtons.forEach(menuButton => {\r\n            menuButton.addEventListener('click', evt => this.captureMenuButton(evt));\r\n        });\r\n\r\n        this.isSoundMuted = false;\r\n    }\r\n\r\n    // loading scene\r\n    loadingScene() {\r\n        const loadingScene = document.querySelector('.loading-scene');\r\n        const loadingLogo = document.querySelector('.loading-logo');\r\n\r\n        window.addEventListener('load', () => {\r\n            loadingLogo.classList.add('visible');\r\n\r\n            setTimeout(() => {\r\n                loadingLogo.classList.remove('visible');\r\n                loadingScene.classList.add('hidden');\r\n            }, 1400);\r\n        });\r\n    }\r\n\r\n    // start new memory game\r\n    startGame(pickedLevel) {\r\n        this.memory = new Memory(this.nodes.board, pickedLevel);\r\n        this.memory.renderCards();\r\n        this.memory.fillCards();\r\n        this.memory.handOutCards();\r\n\r\n        // if sound was muted in previous game, keep this setting\r\n        this.isSoundMuted ? this.memory.sound.mute() : this.memory.sound.setVolume(0.4);\r\n\r\n        this.statistics = this.memory.statistics;\r\n        this.nodes.footer.classList.add('hidden');\r\n    }\r\n\r\n    // when hamburger icon is clicked \r\n    menuToggle() {\r\n        this.nodes.menuToggleButton.classList.toggle('active');\r\n        this.nodes.menuBar.classList.toggle('active');\r\n        this.nodes.board.classList.toggle('menu-active');\r\n        this.nodes.logo.classList.toggle('menu-active');\r\n    }\r\n\r\n    // capture which menu button was clicked\r\n    captureMenuButton(evt) {\r\n        const action = evt.target.dataset.action;\r\n\r\n        switch (action) {\r\n            case 'new-game':\r\n                // new game button\r\n                this.memory.breakGame();\r\n                this.introduction(false);\r\n\r\n                // if modal wasn't close, close it\r\n                if (this.nodes.board.classList.contains('modaled'))\r\n                    this.closeModal();\r\n\r\n                // if mobile view, toggle menu after clicking\r\n                if (window.innerWidth < 1024)\r\n                    this.menuToggle();\r\n                break;\r\n\r\n            case 'pause':\r\n                // continue/pause button\r\n                if (this.memory.gameActive) {\r\n                    this.memory.gameActive = false;\r\n                    this.nodes.board.classList.add('paused');\r\n                    this.statistics.pauseTime();\r\n                    evt.target.innerHTML = '<i class=\"fas fa-play\"></i> Continue';\r\n                } else {\r\n                    this.memory.gameActive = true;\r\n                    this.nodes.board.classList.remove('paused');\r\n                    this.statistics.startTime();\r\n                    evt.target.innerHTML = '<i class=\"fas fa-pause\"></i> Pause';\r\n                }\r\n                break;\r\n            case 'sound':\r\n                // mute / unmute button\r\n\r\n                // when game wasn't started once yet - fake this\r\n                if (!this.memory) {\r\n                    if (this.isSoundMuted) {\r\n                        this.isSoundMuted = false;\r\n                        evt.target.innerHTML = '<i class=\"fas fa-volume-up\"></i> Sound: on';\r\n                    } else {\r\n                        this.isSoundMuted = true;\r\n                        evt.target.innerHTML = '<i class=\"fas fa-volume-mute\"></i> Sound: off';\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if (this.memory.sound.muted) {\r\n                    this.memory.sound.unmute();\r\n                    this.isSoundMuted = false;\r\n                    evt.target.innerHTML = '<i class=\"fas fa-volume-up\"></i> Sound: on';\r\n                } else {\r\n                    this.memory.sound.mute();\r\n                    this.isSoundMuted = true;\r\n                    evt.target.innerHTML = '<i class=\"fas fa-volume-mute\"></i> Sound: off';\r\n                }\r\n                break;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    // introduction scene\r\n    introduction(firstTime = true) {\r\n        const newGameButton = document.querySelector(`[data-action=\"new-game\"]`);\r\n        const intro = this.nodes.intro;\r\n        const footer = this.nodes.footer;\r\n\r\n        footer.classList.remove('hidden');\r\n\r\n        // if it is another game, just show introduction without adding listeners again\r\n        if (!firstTime) {\r\n            intro.classList.remove('hidden');\r\n            newGameButton.disabled = true;\r\n            return;\r\n        }\r\n\r\n        // difficulty form handling\r\n        const difficultyForm = this.nodes.difficultyLevelForm;\r\n        const difficultyDescription = this.nodes.difficultyDescription;\r\n        let pickedLevel = 'normal';\r\n\r\n        intro.classList.remove('hidden');\r\n        newGameButton.disabled = true;\r\n\r\n        difficultyForm.addEventListener('change', evt => {\r\n            pickedLevel = evt.target.id;\r\n            const activeDesc = difficultyDescription.querySelector('.active');\r\n            const descToLoad = difficultyDescription.querySelector(`[data-level=${pickedLevel}]`);\r\n\r\n            activeDesc.classList.remove('active');\r\n            setTimeout(() => descToLoad.classList.add('active'), 100);\r\n        });\r\n\r\n        difficultyForm.addEventListener('submit', evt => {\r\n            evt.preventDefault();\r\n\r\n            newGameButton.disabled = false;\r\n            intro.classList.add('hidden');\r\n\r\n            // start new game\r\n            this.startGame(pickedLevel);\r\n        });\r\n    }\r\n\r\n    // show modal / type parameter intended for future game development\r\n    // todo: prompt modal type\r\n    openModal(content, type = 'default') {\r\n        this.nodes.board.classList.add('modaled');\r\n        this.nodes.modal.classList.remove('hidden');\r\n        this.nodes.modal.innerHTML = content;\r\n\r\n        // append close button to the modal\r\n        const closeModalButton = document.createElement('i');\r\n        closeModalButton.className = 'fas fa-window-close close-modal-btn';\r\n        closeModalButton.addEventListener('click', () => this.closeModal());\r\n\r\n        this.nodes.modal.appendChild(closeModalButton);\r\n    }\r\n\r\n    // close modal\r\n    closeModal() {\r\n        this.nodes.board.classList.remove('modaled');\r\n        this.nodes.modal.classList.add('hidden');\r\n    }\r\n}\r\n\r\nexport default Interface;","import Interface from './Interface';\r\n\r\nconst userInterface = new Interface();\r\n\r\nuserInterface.init();\r\nuserInterface.loadingScene();\r\nuserInterface.introduction();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}